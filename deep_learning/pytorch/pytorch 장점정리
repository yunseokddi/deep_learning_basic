pytorch 정리
tensorflow						vs						pytorch
static (run time중 변경하기 어려움),  Define-and-Run 프레임워크						dynamic(coding을 하고 바로 run할 수 있음), RNN에서 다양한 길이의 INPUT을 받을 수 있다., Define-by-Run framework
debug하기 어려움											runtime중  debug 가능
Tensorboard											Visdom
사용자가 많다												성장중
low-level control가능									high level을 다루기 유용
														tensorflow보다 난이도가 쉬움

keras: 초보자, 표준 네트워크 빠른 적용, 90%의 연구용으로 가능
tensorflow: 높은 자유도, 산업용, 많은 예제
pytorch: 직관적임, 높은 자유도, 연구용 -> keras와 tensorflow의 사이, 배우는 과정이 재밋음

advantage
-실시간 결과값 시각화
-numpy, scipy, cython등과의 높은 호완성
-dynamic하다
-numpy스러운 tensor연산 gpu로 가능
-autograd system을 통해 dnn을 쉽게짤 수 있다.

------------------------------------------
requires_grad=True // 해당 tensor에서 이루어진 모든 연산들을 추적하기 시작한다.


영상분야 학습 = torchvision

